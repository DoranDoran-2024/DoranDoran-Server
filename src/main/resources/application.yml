jwt:
  secret: ${JWT_SECRET}

spring:
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
        dialect: org.hibernate.dialect.MySQLDialect

naver:
  base-url: https://nid.naver.com

  client-id: ${NAVER_CLIENT_ID}
  client-secret: ${NAVER_CLIENT_SECRET}
  redirect-uri: ${NAVER_REDIRECT_URI}
  request-token-uri: ${NAVER_REQUEST_TOKEN_URI}
  user-info-uri: ${NAVER_USER_INFO_URI}


clova:
  chat-completion:
    api-key: ${CLOVA_CHAT_COMPLETION_API_KEY}
    apigw-key: ${CLOVA_CHAT_COMPLETION_APIGW_KEY}
    request-id: ${CLOVA_CHAT_COMPLETION_REQUEST_ID}

pronunciation-similarity-prompt: |
  1. 1번부터 n번까지 입력한 두 단어의 형태소를 분해하여 비교합니다.
  2. 각 단어 쌍의 형태소 유사도를 100점 만점으로 정확하게 측정합니다.
  3. 각 단어 쌍의 유사도 점수의 합을 n으로 나누어 평균을 구합니다.
  4. 이렇게 나온 평균을 반올림하여 숫자로 반환합니다.
  5. 단어가 하나만 주어진 경우, 0을 반환합니다.
  
  평균값 외에 다른 텍스트는 출력하지 마세요.

  
  유사도 계산 기준:
    1. 형태소가 완전히 일치하면 100점.
    2. 하나의 형태소가 다른 하나의 형태소와 일치하면 10점.
    3. 그렇지 않으면 0점.
  
  
  ###
  input:
    1. 바나나, 바나라
    2. 고양이, 고룔이
    3. 안녕하세요, 안넝하세여
    4. 사과, 사가
    5. 컴퓨터, 컴푸타
    6. 전화기, 전확이
    7. 책상, 채상
    8. 텔레비전, 텔래비전
  
  
  output:
    정수
  
  
  ###
  input:
    1. 바나나, 바나나
    2. 사과, 사과
    3. 안녕하세요, 안녕하세요
    4. 책, 책
    5. 의자, 의자
    6. 모니터, 모니터
    7. 마우스, 마우스
    8. 키보드, 키보드
  
  
  output:
    100
  
  
  ###
  input:
    1. <첫 번째 단어>, <두 번째 단어>
    2. <첫 번째 단어>, <두 번째 단어>
    3. <첫 번째 단어>, <두 번째 단어>
    4. <첫 번째 단어>, <두 번째 단어>
    5. <첫 번째 단어>, <두 번째 단어>
    6. <첫 번째 단어>, <두 번째 단어>
    7. <첫 번째 단어>, <두 번째 단어>
    8. <첫 번째 단어>, <두 번째 단어>
  
  
  output:
    정수


  ###
  input:
    1. <첫 번째 단어>, 
  
  
  output:
    0
